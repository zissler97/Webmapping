//chargement de la carte 
    var map = L.map('map', {
  fullscreenControl: true,
  fullscreenControlOptions: {
    position: 'topleft'
  }
    //définition de l'emprise initiale de la map
}).setView([48.75, 2], 8);

//Ajout du geocoder
    var osmGeocoder = new L.Control.OSMGeocoder({placeholder: 'Search location...'});
		map.addControl(osmGeocoder);
//Ajout du fond osm
    var osm=L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {            
    attribution: '<a href="http://openstreetmap.org">OpenStreetMap</a>',
    maxZoom: 18,
   
    }).addTo(map);
    map.setView([48.8392, 2.5876], 14);
 // Ajout des couches
 
   //Insertion de la couche reseau
var reseau_sncf = L.geoJson(reseau_sncf, { style: function (feature)
{
return {weight: 1,
    color: 'blue'};
}
});
reseau_sncf.addTo(map);
//Insertion couche rer a
var RERA = L.geoJson(RERA, { style: function (feature)
{
return {weight: feature.properties.radius_qgis2leaf,
    color: 'red',
opacity: feature.properties.transp_qgis2leaf,
fillOpacity: feature.properties.transp_qgis2leaf};
}
});
RERA.addTo(map);
    //Insertion de la couche rer B

var RERB =  L.geoJson(RERB, {
}).addTo(map);
   //Insertion des départements
var deps_idf = L.geoJson(deps_idf, { 
        onEachFeature: onEachFeature,
        style: function (feature)
{
return {weight: feature.properties.radius_qgis2leaf,
    color: 'black',
    padding: '2',
opacity: feature.properties.transp_qgis2leaf,
fillOpacity: feature.properties.transp_qgis2leaf};
}
});
deps_idf.addTo(map);
//Insertion de la couche rer D
var RERD = L.geoJson(RERD, { style: function (feature)
{
return {weight: feature.properties.radius_qgis2leaf,
    color: 'green'};
}
});
RERD.addTo(map);

//Insertion de la couche rer C
var RERC = L.geoJson(RERC, { style: function (feature)
{
return {weight: feature.properties.radius_qgis2leaf,
    color: 'yellow'};
}
});
RERC.addTo(map);
//Insertion de la couche rer E
var RERE = L.geoJson(RERE, { style: function (feature)
{
return {weight: feature.properties.radius_qgis2leaf,
    color: 'yellow'};
}
});
RERE.addTo(map);
    //Insertion des gares
var gares_idf =L.geoJson(gares_idf, {
}).addTo(map);
  
//création  de clusters
var markers = L.markerClusterGroup();

//Insertion des stations autolib
var st_autolib = L.geoJson(stations_autolib, {
			onEachFeature: function (feature, layer) {
				layer.bindPopup(feature.properties.address);
			}
		});
		markers.addLayer(st_autolib);

		map.addLayer(markers);
		map.fitBounds(markers.getBounds());
//Ajout des marqueurs
    var marker = L.marker([51.5, -0.09]).addTo(map);
    var airportIcon = L.icon({
iconUrl: 'img/icon_airport.png',
iconSize: [40, 40]
});
//Création d'un groupe de marqueurs pour les aéroports
var airports = new L.LayerGroup();
L.marker([48.7318763,2.369796], {icon: airportIcon}).bindPopup('Aéroport de Paris-Orly.').addTo(airports);
L.marker([49.009691,2.547924], {icon: airportIcon}).bindPopup('Aéroport de Paris-Roissy Charles-de-Gaulle.').addTo(airports);
L.marker([48.961472,2.437202], {icon: airportIcon}).bindPopup('Aéroport du Bourget').addTo(airports);
airports.addTo(map);

//Fonction utilisé pour le pop up

function onEachFeature(feature, layer) {
if (feature.properties) {
layer.bindPopup("<b>" + feature.properties.CODE_DEPT + "</b><br>" +
feature.properties.NOM_DEPT);
}}
//Echelle
L.control.scale().addTo(map);
//Ajout des titres
var title = new L.Control();
title.onAdd = function (map) {
this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
this.update();
return this._div;
};
title.update = function () {
this._div.innerHTML = this._div.innerHTML = '<h2>Les transports en <br> Ile-de-France </h2>2014<br><center><img src="img/stif_logo.png" /><br><img src="img/sncf_logo.png" /><br><img src="img/autolib_logo.png" /></center>'
};
title.addTo(map);
//Ajout des tuiles 

var tuile_perso=L.tileLayer('tiles/TOPO8IDF/{z}/{x}/{y}.png',{ 
  maxZoom: 12,
  tms: true, 
  attribution: 'Generated by QTiles'}).addTo(map);
 /*Ajout du fond stamen*/
var stamen=L.tileLayer('http://tile.stamen.com/toner/{z}/{x}/{y}.png', {
attribution: '&copy; <a href="http://maps.stamen.com/">Stamen Design</a>'
}).addTo(map);
//Fond google maps
var Gmaps= L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}').addTo(map)



//Ajout fond IGN
var OrthoIGN = L.tileLayer('https://wxs.ign.fr/{ignApiKey}/geoportail/wmts?'+
            '&REQUEST=GetTile&SERVICE=WMTS&VERSION=1.0.0&TILEMATRIXSET=PM'+
            '&LAYER={ignLayer}&STYLE={style}&FORMAT={format}'+
            '&TILECOL={x}&TILEROW={y}&TILEMATRIX={z}',
            {
	            ignApiKey: 'pratique',
	            ignLayer: 'ORTHOIMAGERY.ORTHOPHOTOS',
	            style: 'normal',
	            format: 'image/jpeg',
	            service: 'WMTS'
        }).addTo(map) ;
//Ajout d'un fond WMS
var meteo = L.tileLayer.wms("http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi", {
layers: 'nexrad-n0r-900913',
format: 'image/png',
transparent: true,
attribution: "Weather data © 2012 IEM Nexrad"
}).addTo(map);
//défintion des layers pour le contrôleur de baselayers
var baseLayers = {
"OSM":osm,
"Toner":stamen,
"OrthoIGN":OrthoIGN,
"tuile_perso":tuile_perso    ,
"Gmaps"  :Gmaps   

};
//défintion des couches pour le contrôleur de couche
var overlayMaps={
"Rer A":RERA,
"Rer B":RERB,
"Rer C":RERC,
"Rer D":RERD,
"Rer E":RERE,
"réseaux sncf":reseau_sncf,
"gares_idf":gares_idf,
"deps_idf":deps_idf,
"meteo":meteo,
"stations_autolib":markers
};
//Ajout des controleur à la carte
L.control.layers(baseLayers,overlayMaps).addTo(map)
//fonctionnalité de géolocalisation
map.locate({setView: true, maxZoom: 16});   
function onLocationFound(e) {
var radius = e.accuracy / 2;
L.marker(e.latlng).addTo(map)
.bindPopup("You are within " + radius + " meters from this point").openPopup();
L.circle(e.latlng, radius).addTo(map);
}
map.on('locationfound', onLocationFound);
function onLocationError(e) {
alert(e.message);
}
map.on('locationerror', onLocationError);
 